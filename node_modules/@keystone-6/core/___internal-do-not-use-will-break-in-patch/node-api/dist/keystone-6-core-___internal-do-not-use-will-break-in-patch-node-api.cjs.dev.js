'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var initConfig = require('../../../dist/initConfig-c6b5cfcb.cjs.dev.js');
require('@babel/runtime/helpers/objectSpread2');
require('p-limit');
require('../../../dist/core-3a9d46a1.cjs.dev.js');
require('../../../dist/mysql-07d3e612.cjs.dev.js');
require('../../../dist/graphql-ts-schema-45e537ad.cjs.dev.js');
require('@graphql-ts/schema');
require('graphql-type-json');
require('graphql-upload/public/GraphQLUpload.js');
require('graphql');
require('decimal.js');
require('@graphql-ts/schema/api-without-context');
require('@graphql-ts/extend');
require('@graphql-ts/schema/api-with-context');
require('@graphql-tools/schema');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../../dist/graphql-errors-f01aca67.cjs.dev.js');
require('apollo-server-errors');
require('path');
require('util');
require('fs-extra');
require('resolve');
require('@nodelib/fs.walk');
require('@emotion/hash');
require('../../../dist/admin-meta-graphql-52052d30.cjs.dev.js');
require('@apollo/client');
require('@babel/runtime/helpers/classPrivateFieldInitSpec');
require('@babel/runtime/helpers/classPrivateFieldGet');
require('@babel/runtime/helpers/classPrivateFieldSet');
require('../../../dist/types-for-lists-e889ab41.cjs.dev.js');
require('graphql/execution/values');
require('pluralize');
require('@babel/runtime/helpers/defineProperty');
require('uuid');
require('image-type');
require('image-size');
require('stream');
require('@aws-sdk/s3-request-presigner');
require('@aws-sdk/client-s3');
require('@aws-sdk/lib-storage');
require('crypto');
require('filenamify');
require('@sindresorhus/slugify');
require('cuid');
require('../../../dist/package-path-2f19a22b.cjs.dev.js');

function createQueryAPI(config, prismaClient) {
  const {
    getKeystone
  } = initConfig.createSystem(initConfig.initConfig(config));
  const keystone = getKeystone(prismaClient);
  keystone.connect();
  return keystone.createContext({
    sudo: true
  }).query;
}

exports.createQueryAPI = createQueryAPI;
